# all files must be saved with .rb ending to be used by OpenSHAPA

# must begin every script with this line
require 'OpenSHAPA_API.rb'

# tells computer to start program
begin

# assign Ruby Variables to OpenSHAPA variables

id = getVariable("ID")
assessment = getVariable("Assessment")
period = getVariable("Period")
rcontact = getVariable("RContact")
lcontact = getVariable("LContact")
rhormv = getVariable("RHorMv")
lhormv = getVariable("LHorMv")
rvertmv = getVariable("RVertMv")
lvertmv = getVariable("LVertMv")
visattn = getVariable("VisAttn")
rtoyint = getVariable("RToyInt")
ltoyint = getVariable("LToyInt")
mouthreach = getVariable("MouthReach")
rarm = getVariable("RArm")
larm = getVariable("LArm")
trunk = getVariable("Trunk")

# assign location of output file.  This file will save with specified name on Desktop.

dir = File.expand_path("~/Desktop") 

out_file = File.new(dir + "/Data_Output_EXALONE.txt", "a")

# printing nested cells

# prints all info in id cell
# tells computer which columns to look at & makes sure the coded data fell within the ID, assessment, and period data periods

# Data output for 1st variable column rcontact

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for rcontactcell in rcontact.cells
                       if rcontactcell.onset >= periodcell.onset and rcontactcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + rcontactcell.rcontact + "\t" + rcontactcell.onset.to_s + "\t" + rcontactcell.offset.to_s + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end

# Data output for 2nd variable column lcontact

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for lcontactcell in lcontact.cells
                       if lcontactcell.onset >= periodcell.onset and lcontactcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + lcontactcell.lcontact + "\t" + lcontactcell.onset.to_s + "\t" + lcontactcell.offset.to_s + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end


# Data output for 3rd variable column rhormv

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for rhormvcell in rhormv.cells
                       if rhormvcell.onset >= periodcell.onset and rhormvcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + rhormvcell.rhormv + "\t" + rhormvcell.onset.to_s + "\t" + rhormvcell.offset.to_s + "\t" + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end


# Data output for 4th variable column lhormv

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for lhormvcell in lhormv.cells
                       if lhormvcell.onset >= periodcell.onset and lhormvcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + lhormvcell.lhormv + "\t" + lhormvcell.onset.to_s + "\t" + lhormvcell.offset.to_s + "\t" + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end


# Data output for 5th variable column rvertmv

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for rvertmvcell in rvertmv.cells
                       if rvertmvcell.onset >= periodcell.onset and rvertmvcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + rvertmvcell.rvertmv + "\t" + rvertmvcell.onset.to_s + "\t" + rvertmvcell.offset.to_s + "\t" + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end


# Data output for 6th variable column lvertmv

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for lvertmvcell in lvertmv.cells
                       if lvertmvcell.onset >= periodcell.onset and lvertmvcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + lvertmvcell.lvertmv + "\t" + lvertmvcell.onset.to_s + "\t" + lvertmvcell.offset.to_s + "\t" + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end


# Data output for 7th variable column visattn

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for visattncell in visattn.cells
                       if visattncell.onset >= periodcell.onset and visattncell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + visattncell.visattn + "\t" + visattncell.onset.to_s + "\t" + visattncell.offset.to_s + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end


# Data output for 8th variable column rtoyint 

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for rtoyintcell in rtoyint.cells
                       if rtoyintcell.onset >= periodcell.onset and rtoyintcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + rtoyintcell.rtoyint + "\t" + rtoyintcell.onset.to_s + "\t" + rtoyintcell.offset.to_s + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end

# Data output for 8th variable column ltoyint 

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for ltoyintcell in ltoyint.cells
                       if ltoyintcell.onset >= periodcell.onset and ltoyintcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + ltoyintcell.ltoyint + "\t" + ltoyintcell.onset.to_s + "\t" + ltoyintcell.offset.to_s + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end

# Data output for 9st variable column mouthreach

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for mouthreachcell in mouthreach.cells
                       if mouthreachcell.onset >= periodcell.onset and mouthreachcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + mouthreachcell.mouthreach + "\t" + mouthreachcell.onset.to_s + "\t" + mouthreachcell.offset.to_s + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end

# Data output for 10th variable column rarm 

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for rarmcell in rarm.cells
                       if rarmcell.onset >= periodcell.onset and rarmcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + rarmcell.rarm + "\t" + rarmcell.onset.to_s + "\t" + rarmcell.offset.to_s + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end

# Data output for 11th variable column larm 

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for larmcell in larm.cells
                       if larmcell.onset >= periodcell.onset and larmcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + larmcell.larm + "\t" + larmcell.onset.to_s + "\t" + larmcell.offset.to_s + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end

# Data output for 12th variable column trunk 

for idcell in id.cells
   for assessmentcell in assessment.cells
         for periodcell in period.cells
               for trunkcell in trunk.cells
                       if trunkcell.onset >= periodcell.onset and trunkcell.offset <= periodcell.offset
                             if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                                    if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

# writes data in output file

                                         out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + trunkcell.trunk + "\t" + trunkcell.onset.to_s + "\t" + trunkcell.offset.to_s + "\n")

                                     end
                              end
                         end
                 end
          end
     end
end


#                       ************************************************

# Copy and paste to add variables as needed to export all of the variables' data with one script

#                       ************************************************






# Must also export the period duration information as records

for idcell in id.cells
   for assessmentcell in assessment.cells
         if assessmentcell.assessmentname == "EXALONE"
             for periodcell in period.cells
                  if periodcell.onset >= assessmentcell.onset and periodcell.offset <= assessmentcell.offset
                      if assessmentcell.onset >= idcell.onset and assessmentcell.offset <= idcell.offset

                  
                      out_file.syswrite (idcell.id + "\t" + idcell.initials + "\t" + idcell.studyphase + "\t" + idcell.visitnumber + "\t" + assessmentcell.assessmentname + "\t" + periodcell.periodname + "\t" + assessmentcell.deviceonoff + "\t" + assessmentcell.assessmentname + "\t" + periodcell.onset.to_s + "\t" + periodcell.offset.to_s + "\n")


                    end                   
                  end 
             end     
         end 
    end
end


# Final end command follows

end

